# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/communication/dsoftbus/dsoftbus.gni")
module_output_path = "dsoftbus/transmission"

##############################fuzztest##########################################
ohos_fuzztest("SoftbusProxychannelListenerFuzzTest") {
  module_out_path = module_output_path

  fuzz_config_file = "$dsoftbus_root_path/tests/core/transmission/fuzztest/softbusproxychannellistener_fuzzer"

  include_dirs = [
    "$softbus_adapter_common/include",

    "$dsoftbus_root_path/core/adapter/bus_center/include",
    "$dsoftbus_root_path/core/authentication/interface",

    "$dsoftbus_root_path/core/bus_center/interface",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/common/include",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/lane_manager/include",

    "$dsoftbus_root_path/core/common/include",
    "$dsoftbus_root_path/core/common/message_handler/include",

    "$dsoftbus_root_path/core/connection/interface",
    "$dsoftbus_root_path/core/connection/p2p/interface",
    "$dsoftbus_root_path/core/connection/p2p/common/include",

    "$dsoftbus_root_path/core/discovery/interface",
    "$dsoftbus_root_path/core/discovery/manager/include",

    "$dsoftbus_root_path/core/transmission/common/include",
    "$dsoftbus_root_path/core/transmission/trans_channel/common/include",
    "$dsoftbus_root_path/core/transmission/trans_channel/proxy/include",

    "$dsoftbus_root_path/core/transmission/session/include",
    "$dsoftbus_root_path/core/transmission/trans_channel/manager/include",
    "$dsoftbus_root_path/core/transmission/pending_packet/include",

    "$dsoftbus_root_path/interfaces/kits",
    "$dsoftbus_root_path/interfaces/kits/bus_center",
    "$dsoftbus_root_path/interfaces/kits/common",
    "$dsoftbus_root_path/interfaces/kits/discovery",
    "$dsoftbus_root_path/interfaces/kits/transport",

    "//third_party/cJSON",
    "unittest/common/",

    "$dsoftbus_root_path/core/bus_center/lnn/net_buscenter/include",
    "$dsoftbus_root_path/core/transmission/trans_channel/proxy/src",
    "$dsoftbus_root_path/core/transmission/interface",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [ "softbusproxychannellistener_fuzzer.cpp" ]

  deps = [
    "$dsoftbus_root_path/adapter:softbus_adapter",
    "$dsoftbus_root_path/core/common:softbus_utils",
    "$dsoftbus_root_path/core/frame:softbus_server",
    "$dsoftbus_root_path/sdk:softbus_client",
  ]

  external_deps = [ "c_utils:utils" ]
  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }
}

group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    # deps file
    ":SoftbusProxychannelListenerFuzzTest",
  ]
}
