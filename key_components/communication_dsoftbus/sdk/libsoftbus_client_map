/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

1.0 {
    global:
        "TransServerProxyInit";
        "LeaveMetaNodeInner";
        "ServerIpcGetAllOnlineNodeInfo";
        "TransDataListDeinit";
        "CheckPermissionState";
        "TransUdpChannelSendFile";
        "ActiveMetaNodeInner";
        "TransTdcRecvData";
        "LnnOnJoinResult";
        "ActiveMetaNode";
        "GetLocalNodeDeviceInfo";
        "TransOnUdpChannelQosEvent";
        "ServerIpcPublishLNN";
        "ClientDeleteSession";
        "UnPublishServiceInner";
        "ClientTransUdpMgrDeinit";
        "ServerIpcNotifyAuthSuccess";
        "ServerIpcLeaveLNN";
        "OpenAuthSession";
        "TransAuthChannelSendBytes";
        "RegisterStreamCb";
        "TransOnChannelOpened";
        "FreeNodeInfo";
        "ServerIpcStreamStats";
        "TransTdcSendMessage";
        "DiscClientDeinit";
        "FindConfigType";
        "TransClientDeinit";
        "ClientRegisterService";
        "GetPendingPacketData";
        "ClientTransAuthInit";
        "StartNStackXDFileServer";
        "BusCenterServerProxyInit";
        "ServerIpcStopRefreshLNN";
        "TransGetUdpChannel";
        "ServerIpcPublishService";
        "DiscClientOnPublishSuccess";
        "ClientTransProxyDeinit";
        "JoinMetaNode";
        "ClinetTransProxyInit";
        "TransDeleteFileListener";
        "FrameIndexToType";
        "ServerIpcStopTimeSync";
        "GetMySessionNameInner";
        "StartDiscovery";
        "RefreshLNNInner";
        "LnnOnLeaveResult";
        "ServerIpcStopDiscovery";
        "GetSessionSide";
        "TransOnChannelClosed";
        "TransProxyChannelSendBytes";
        "TransGetUdpChannelByFileId";
        "StopRefreshLNNInner";
        "ReadMaxSendBytesSize";
        "TransDisableSessionListener";
        "ServerIpcCreateSessionServer";
        "TransOnUdpChannelOpenFailed";
        "CheckSendLen";
        "DiscServerProxyInit";
        "ClientTransRegLnnOffline";
        "ServerIpcStartTimeSync";
        "TransCloseStreamChannel";
        ".init_proc";
        "ClientTransChannelSendBytes";
        "TransTdcGetHandle";
        "ServerIpcUnPublishService";
        "GetNodeKeyInfoInner";
        "InitPendingPacket";
        "DeactiveMetaNode";
        "JoinLNNInner";
        "ClientCleanAllSessionWhenServerDeath";
        "ReCreateSessionServerToServer";
        "DisableSessionListener";
        "RemoveSessionServerInner";
        "ClientTransTdcOnChannelOpenFailed";
        "InitSoftBus";
        "SetFileSendListener";
        "ClientTransAuthOnChannelOpened";
        "LeaveLNNInner";
        "ShiftLNNGear";
        "ClientGetSessionKey";
        "ClientQosReport";
        "ClientTransAuthCloseChannel";
        "GetLocalNodeDeviceInfoInner";
        "TransOnSessionOpened";
        "GetNodeKeyInfo";
        "ClinetTransProxyFileManagerDeinit";
        "BusCenterClientInit";
        "GetSoftBusClientNameList";
        "StartVtpStreamChannelServer";
        "ClientGetSessionIdByChannelId";
        "ClientTransTdcSetCallBack";
        "TransOnFileChannelOpened";
        "TransOnSessionOpenFailed";
        "TransOnstreamChannelOpened";
        "CloseVtpStreamChannel";
        "ClientTransCloseChannel";
        "LnnOnPublishLNNResult";
        "GetSessionKey";
        "ClientTransAuthOnChannelClosed";
        "IsServerSideInner";
        "TransProxyChannelSendMessage";
        "TransDataListInit";
        "DiscClientOnDiscoverySuccess";
        "TransOnSessionClosed";
        "TransGetFileName";
        "GetEncryptByChannelId";
        "TransTdcGetInfoByFd";
        "SendFile";
        "GetAllNodeDeviceInfoInner";
        "UnregNodeDeviceStateCb";
        "DeactiveMetaNodeInner";
        "SetNodeDataChangeFlag";
        "TransTdcReleaseFd";
        "TransTdcGetSessionKey";
        "TransFileInit";
        "BusCenterClientDeinit";
        "ServerIpcOpenAuthSession";
        "CreatePendingPacket";
        "CreateSessionServerInner";
        "PublishServiceInner";
        "RefreshLNN";
        "GetPkgNameInner";
        "CloseSession";
        "CLIENT_NotifyObserver";
        "ServerIpcGetLocalDeviceInfo";
        "DiscClientInit";
        "ClientAddAuthSession";
        "TransTdcGetInfoByIdWithIncSeq";
        "PublishLNNInner";
        "ServerIpcSetNodeDataChangeFlag";
        "ClientTransChannelDeinit";
        "GetPeerDeviceIdInner";
        "ClientTransProxyOnChannelOpenFailed";
        "BusCenterServerProxyDeInit";
        "LnnOnRefreshLNNResult";
        "StopPublishLNNInner";
        "UnregNodeDeviceStateCbInner";
        "TransProxyChannelSendFile";
        "ClientTransChannelSendFile";
        "ClientEnableSessionByChannelId";
        "ClientGetFileConfigInfoById";
        "CheckDestFilePathValid";
        "ServerIpcStopPublishLNN";
        "RegisterFileCb";
        "InnerOnBytesReceived";
        "RemoveSessionServer";
        "StopDiscovery";
        "ClientGetSessionCallbackById";
        "ClientTransUdpMgrInit";
        "GetPeerUidInner";
        "TransCloseFileChannel";
        "TransDeleteUdpChannel";
        "GetAllMetaNodeInfo";
        "LnnOnRefreshDeviceFound";
        "ServerIpcActiveMetaNode";
        "ServerIpcLeaveMetaNode";
        "DiscClientOnDeviceFound";
        "EventClientInit";
        "ServerIpcGetNodeKeyInfo";
        "CheckPackageName";
        "PublishLNN";
        "ClientTransAuthOnDataReceived";
        "StopDiscoveryInner";
        "SendStream";
        "TransSetFileSendListener";
        "ClientTransProxyOnChannelOpened";
        "LnnOnNodeOnlineStateChanged";
        "StopTimeSync";
        "PermissionStateChange";
        "TransUdpChannelSendStream";
        "ServerIpcDeactiveMetaNode";
        "LnnOnNodeBasicInfoChanged";
        "OpenSessionSync";
        "ReadMaxSendMessageSize";
        "ClientTransTdcOnChannelOpened";
        ".term_proc";
        "LnnOnTimeSyncResult";
        "TransAddDataBufNode";
        "ClinetTransProxyFileManagerInit";
        "TransTdcCloseChannel";
        "DestroyPendingPacket";
        "ClientAddSession";
        "ServerIpcRippleStats";
        "ClientGrantPermission";
        "TransAuthChannelSendMessage";
        "TransGetFileListener";
        "ShiftLNNGearInner";
        "ServerIpcStartDiscovery";
        "ServerIpcJoinMetaNode";
        "FileUnLock";
        "TransOnUdpChannelOpened";
        "ClientGetChannelBusinessTypeBySessionId";
        "TransOnChannelOpenFailed";
        "ProxyChannelSendFile";
        "ClientDeathProcTask";
        "NotifyAuthSuccess";
        "GetPeerPidInner";
        "StartNStackXDFileClient";
        "MetaNodeOnLeaveResult";
        "DiscClientOnPublishFail";
        "ProcessFileFrameData";
        "SendVtpStream";
        "TransClientInit";
        "TransServerProxyDeInit";
        "GetClientSessionCb";
        "ClientTransChannelInit";
        "ClientTransOnLinkDown";
        "ClientGetHandle";
        "QosReport";
        "ClientTransCloseUdpChannel";
        "ClientGetChannelBySessionId";
        "OpenSession";
        "OpenSessionInner";
        "TransOnOnStreamRecevied";
        "TransOnUdpChannelClosed";
        "RegNodeDeviceStateCbInner";
        "TransOnChannelLinkDown";
        "JoinMetaNodeInner";
        "LeaveLNN";
        "ClientTransProxyOnDataReceived";
        "FileLock";
        "RegisterEventCallback";
        "ClientStubInit";
        "JoinLNN";
        "StartTimeSyncInner";
        "TransSendStream";
        "MetaNodeOnJoinResult";
        "GetMySessionName";
        "GetAllMetaNodeInfoInner";
        "TransOnQosEvent";
        "TryFileLock";
        "TransSetFileReceiveListener";
        "StartTimeSync";
        "ServerIpcShiftLNNGear";
        "ClientAddNewSession";
        "TransSendFile";
        "ServerIpcOpenSession";
        "ClientDeleteSessionServer";
        "InnerOnMessageReceived";
        "ClientTransProxyCloseChannel";
        "ClientTransTdcOnSessionOpened";
        "StopRefreshLNN";
        "IsPathValid";
        "TransTdcGetInfoById";
        "UnregisterStreamCb";
        "PublishService";
        "ClientTransChannelSendStream";
        "TransTdcSendBytes";
        "GetAllNodeDeviceInfo";
        "CreateSessionServer";
        "TransTdcCreateListener";
        "RegNodeDeviceStateCb";
        "StopTimeSyncInner";
        "EventClientDeinit";
        "FileListToBuffer";
        "RTU_CRC";
        "UnPublishService";
        "SetFileReceiveListener";
        "ClientGetSessionDataById";
        "ClientTransChannelSendMessage";
        "ClientTransTdcOnSessionOpenFailed";
        "ServerIpcJoinLNN";
        "SendMessage";
        "ServerIpcRemoveSessionServer";
        "GetAndCheckRealPath";
        "StartVtpStreamChannelClient";
        "GetPeerDeviceId";
        "ClientTransProxyOnChannelClosed";
        "ClientTransTdcOnSessionClosed";
        "TransTdcStopRead";
        "ServerIpcCloseChannel";
        "DiscClientOnDiscoverFailed";
        "SendBytesInner";
        "GetPeerSessionNameInner";
        "TransTdcManagerDeinit";
        "ServerIpcRefreshLNN";
        "DeletePendingPacket";
        "ClientDisableSessionListener";
        "GetSessionOption";
        "SetPendingPacketData";
        "TransTdcManagerInit";
        "TransUdpDeleteFileListener";
        "RemovePermissionInner";
        "BufferToFileList";
        "TransOnChannelMsgReceived";
        "ClientGetSessionCallbackByName";
        "CloseSessionInner";
        "ClientTransTdcOnDataReceived";
        "ClientAddSessionServer";
        "StartDiscoveryInner";
        "InnerOnSessionOpened";
        "GrantPermissionInner";
        "LeaveMetaNode";
        "SetNodeDataChangeFlagInner";
        "ServerIpcSendMessage";
        "ClientTransAuthOnChannelOpenFailed";
        "ServerIpcQosReport";
        "ClientGetSessionSide";
        "GetSessionHandle";
        "TransFileDeinit";
        "ServerIpcRemovePermission";
        "ClientRemovePermission";
        "ClientSetChannelBySessionId";
        "StopPublishLNN";
        "GetPeerSessionName";
        "DiscServerProxyDeInit";
        "ServerIpcGetAllMetaNodeInfo";
        "TransOnChannelQosEvent";
        "ClientGetSessionIntegerDataById";
        "DeleteFileListener";
        "InnerOnSessionClosed";
        "ServerIpcGrantPermission";
        "TransOnDataReceived";
        "SendBytes";
        "ProcessRecvFileFrameData";
        "TransDelDataBufNode";
        "CheckFileSchema";
        "SetSchemaCallback";
        "TransFileSchemaInit";
        "TransFileSchemaDeinit";
        "RegistFileSchema";
        "UnregistFileSchema";
        "TransRegistFileSchema";
        "TransGetFileSchema";
        "TransUnRegistFileSchema";
        "_ZN13Communication7SoftBus15ISessionService11GetInstanceEv";
        extern "C++" {
            OHOS::StreamAdaptor*;
            Communication::SoftBus*;
            OHOS::ISoftBusServer*;
            "VTT for OHOS::BusCenterServerProxy";
            "VTT for OHOS::DiscServerProxy";
            "VTT for OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "VTT for OHOS::ISoftBusClient";
            "VTT for OHOS::ISoftBusServer";
            "VTT for OHOS::SoftBusClientStub";
            "VTT for OHOS::SoftBusServerProxyFrame";
            "VTT for OHOS::TransServerProxy";
            "construction vtable for OHOS::IPCObjectStub-in-OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "construction vtable for OHOS::IPCObjectStub-in-OHOS::SoftBusClientStub";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::BusCenterServerProxy";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::DiscServerProxy";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::ISoftBusClient";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::ISoftBusServer";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::SoftBusClientStub";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::SoftBusServerProxyFrame";
            "construction vtable for OHOS::IRemoteBroker-in-OHOS::TransServerProxy";
            "construction vtable for OHOS::IRemoteObject-in-OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "construction vtable for OHOS::IRemoteObject-in-OHOS::SoftBusClientStub";
            "construction vtable for OHOS::IRemoteProxy<OHOS::ISoftBusServer>-in-OHOS::BusCenterServerProxy";
            "construction vtable for OHOS::IRemoteProxy<OHOS::ISoftBusServer>-in-OHOS::DiscServerProxy";
            "construction vtable for OHOS::IRemoteProxy<OHOS::ISoftBusServer>-in-OHOS::SoftBusServerProxyFrame";
            "construction vtable for OHOS::IRemoteProxy<OHOS::ISoftBusServer>-in-OHOS::TransServerProxy";
            "construction vtable for OHOS::IRemoteStub<OHOS::ISoftBusClient>-in-OHOS::SoftBusClientStub";
            "construction vtable for OHOS::ISoftBusClient-in-OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "construction vtable for OHOS::ISoftBusClient-in-OHOS::SoftBusClientStub";
            "construction vtable for OHOS::ISoftBusServer-in-OHOS::BusCenterServerProxy";
            "construction vtable for OHOS::ISoftBusServer-in-OHOS::DiscServerProxy";
            "construction vtable for OHOS::ISoftBusServer-in-OHOS::SoftBusServerProxyFrame";
            "construction vtable for OHOS::ISoftBusServer-in-OHOS::TransServerProxy";
            "construction vtable for OHOS::Parcelable-in-OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "construction vtable for OHOS::Parcelable-in-OHOS::SoftBusClientStub";
            "guard variable for OHOS::BusCenterServerProxy::delegator_";
            "guard variable for OHOS::DiscServerProxy::delegator_";
            "guard variable for OHOS::SoftBusServerProxyFrame::delegator_";
            "guard variable for OHOS::TransServerProxy::delegator_";
            "non-virtual thunk to OHOS::IRemoteStub<OHOS::ISoftBusClient>::AsObject(void)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnChannelClosed(int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnChannelLinkDown(char const*, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnChannelMsgReceived(int, int, void const*, unsigned int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnChannelOpenFailed(int, int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnChannelOpened(char const*, ChannelInfo const*)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnChannelQosEvent(int, int, int, int, QosTv const*)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnDeviceFound(DeviceInfo const*)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnDiscoverFailed(int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnDiscoverySuccess(int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnJoinLNNResult(void *, unsigned int,char const*, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnJoinMetaNodeResult(void *, unsigned int, char const*, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnLeaveLNNResult(char const*, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnLeaveMetaNodeResult(char const*, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnNodeBasicInfoChanged(void *, unsigned int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnNodeOnlineStateChanged(bool, void *, unsigned int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnPublishFail(int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnPublishLNNResult(int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnPublishSuccess(int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnRefreshDeviceFound(void const*, unsigned int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnRefreshLNNResult(int, int)";
            "non-virtual thunk to OHOS::SoftBusClientStub::OnTimeSyncResult(void const*, unsigned int, int)";
            "vtable for Communication::SoftBus::IStreamSocket";
            "vtable for Communication::SoftBus::RawStreamData";
            "vtable for Communication::SoftBus::SessionImpl";
            "vtable for Communication::SoftBus::SessionServiceImpl";
            "vtable for Communication::SoftBus::StreamCommonData";
            "vtable for Communication::SoftBus::StreamDepacketizer";
            "vtable for Communication::SoftBus::StreamManager";
            "vtable for Communication::SoftBus::StreamManager::StreamSocketListener";
            "vtable for Communication::SoftBus::StreamPacketHeader";
            "vtable for Communication::SoftBus::StreamPacketizer";
            "vtable for Communication::SoftBus::TwoLevelsTlv";
            "vtable for Communication::SoftBus::VtpStreamSocket";
            "vtable for OHOS::BrokerDelegator<OHOS::BusCenterServerProxy>";
            "vtable for OHOS::BrokerDelegator<OHOS::DiscServerProxy>";
            "vtable for OHOS::BrokerDelegator<OHOS::SoftBusServerProxyFrame>";
            "vtable for OHOS::BrokerDelegator<OHOS::TransServerProxy>";
            "vtable for OHOS::BrokerDelegatorBase";
            "vtable for OHOS::BusCenterServerProxy";
            "vtable for OHOS::DiscServerProxy";
            "vtable for OHOS::IRemoteStub<OHOS::ISoftBusClient>";
            "vtable for OHOS::ISoftBusClient";
            "vtable for OHOS::ISoftBusServer";
            "vtable for OHOS::SoftBusClientDeathRecipient";
            "vtable for OHOS::SoftBusClientStub";
            "vtable for OHOS::SoftBusServerProxyFrame";
            "vtable for OHOS::StreamAdaptorListener";
            "vtable for OHOS::TransServerProxy";
        };
    local:
        *;
};