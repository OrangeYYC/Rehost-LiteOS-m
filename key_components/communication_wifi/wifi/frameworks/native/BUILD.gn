# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//foundation/communication/wifi/wifi/wifi_lite.gni")

  shared_library("wifi_sdk") {
    sources = [
      "c_adapter/src/wifi_c_device.cpp",
      "c_adapter/src/wifi_c_utils.cpp",
      "src/wifi_device.cpp",
      "src/wifi_device_callback_stub_lite.cpp",
      "src/wifi_device_impl.cpp",
      "src/wifi_device_proxy_lite.cpp",
      "src/wifi_msg.cpp",
      "src/wifi_scan.cpp",
      "src/wifi_scan_callback_stub_lite.cpp",
      "src/wifi_scan_impl.cpp",
      "src/wifi_scan_proxy_lite.cpp",
    ]

    include_dirs = [
      "$WIFI_ROOT_DIR/frameworks/native/include",
      "$WIFI_ROOT_DIR/frameworks/native/interfaces",
      "$WIFI_ROOT_DIR/frameworks/native/c_adapter/inc",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log/",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
      "$DHCP_ROOT_DIR/interfaces/inner_api/include",
      "$DHCP_ROOT_DIR/services/mgr_service/include",
      "$WIFI_ROOT_DIR/utils/inc",
      "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
      "//foundation/communication/ipc/interfaces/innerkits/c/ipc/include",
      "//foundation/systemabilitymgr/samgr_lite/interfaces/innerkits/registry",
      "//foundation/systemabilitymgr/samgr_lite/interfaces/innerkits/samgr",
      "//third_party/bounds_checking_function/include",
      "//commonlibrary/c_utils/base/include",
    ]

    deps = [
      "$WIFI_ROOT_DIR/utils:wifi_utils",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//foundation/communication/ipc/interfaces/innerkits/c/ipc:ipc_single",
      "//foundation/systemabilitymgr/samgr_lite/samgr:samgr",
      "//third_party/bounds_checking_function:libsec_shared",
    ]

    configs -= [ "//build/lite/config:language_cpp" ]
    cflags_cc = [
      "-std=c++17",
      "-fno-rtti",
    ]
    defines = [ "OHOS_ARCH_LITE" ]
    ldflags = [
      "-fPIC",
      "-Wl,-E",
    ]
  }
} else {
  import("//build/ohos.gni")
  import("//foundation/communication/wifi/wifi/wifi.gni")

  ################################################################################

  config("wifi_sdk_header") {
    include_dirs = [
      "//commonlibrary/c_utils/base/include",
      "//utils/system/safwk/native/include",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
      "//foundation/arkui/ace_engine/frameworks/base/utils",
      "//foundation/arkui/ace_engine/frameworks",
      "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
      "$WIFI_ROOT_DIR/frameworks/native/include",
      "$WIFI_ROOT_DIR/frameworks/native/interfaces",
      "$WIFI_ROOT_DIR/frameworks/native/c_adapter/inc",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log/",
      "//foundation/systemabilitymgr/samgr/adapter/interfaces/innerkits/include",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
      "$DHCP_ROOT_DIR/interfaces/inner_api/include",
      "$DHCP_ROOT_DIR/services/mgr_service/include",
      "$WIFI_ROOT_DIR/interfaces/innerkits",
      "$WIFI_ROOT_DIR/utils/inc",
    ]
  }

  config("wifi_sdk_config") {
    visibility = [ "//:*" ]
    include_dirs = [ ":wifi_fw_common_header" ]

    cflags = [
      "-std=c++17",
      "-fno-rtti",
    ]

    if (target_cpu == "arm") {
      cflags += [ "-DBINDER_IPC_32BIT" ]
    }
  }

  ohos_source_set("wifi_device_proxy_impl") {
    part_name = "wifi"
    sources = [
      "src/wifi_device_impl.cpp",
      "src/wifi_device_proxy.cpp",
    ]

    configs = [
      ":wifi_sdk_config",
      ":wifi_sdk_header",
    ]

    external_deps = [ "ipc:ipc_core" ]
  }

  ohos_source_set("wifi_hotspot_proxy_impl") {
    part_name = "wifi"
    sources = [
      "src/wifi_hotspot_impl.cpp",
      "src/wifi_hotspot_mgr_proxy.cpp",
      "src/wifi_hotspot_proxy.cpp",
    ]

    configs = [
      ":wifi_sdk_config",
      ":wifi_sdk_header",
    ]

    external_deps = [ "ipc:ipc_core" ]
  }

  ohos_source_set("wifi_scan_proxy_impl") {
    part_name = "wifi"
    sources = [
      "src/wifi_scan_impl.cpp",
      "src/wifi_scan_proxy.cpp",
    ]

    configs = [
      ":wifi_sdk_config",
      ":wifi_sdk_header",
    ]

    external_deps = [ "ipc:ipc_core" ]
  }

  ohos_source_set("wifi_p2p_proxy_impl") {
    part_name = "wifi"
    sources = [
      "src/wifi_p2p_impl.cpp",
      "src/wifi_p2p_proxy.cpp",
    ]

    configs = [
      ":wifi_sdk_config",
      ":wifi_sdk_header",
    ]

    external_deps = [ "ipc:ipc_core" ]
  }

  ohos_shared_library("wifi_sdk") {
    sanitize = {
      cfi = true
      boundary_sanitize = true
      cfi_cross_dso = true
      blocklist = "../wifi_frameworks_sdk_block.txt"
    }
    install_enable = true
    sources = [
      "c_adapter/src/wifi_c_device.cpp",
      "c_adapter/src/wifi_c_event.cpp",
      "c_adapter/src/wifi_c_hid2d.cpp",
      "c_adapter/src/wifi_c_hotspot.cpp",
      "c_adapter/src/wifi_c_p2p.cpp",
      "c_adapter/src/wifi_c_utils.cpp",
      "src/wifi_device.cpp",
      "src/wifi_device_callback_stub.cpp",
      "src/wifi_hid2d.cpp",
      "src/wifi_hid2d_msg.cpp",
      "src/wifi_hotspot.cpp",
      "src/wifi_hotspot_callback_stub.cpp",
      "src/wifi_msg.cpp",
      "src/wifi_p2p.cpp",
      "src/wifi_p2p_callback_stub.cpp",
      "src/wifi_p2p_msg.cpp",
      "src/wifi_scan.cpp",
      "src/wifi_scan_callback_stub.cpp",
    ]

    deps = [
      ":wifi_device_proxy_impl",
      ":wifi_hotspot_proxy_impl",
      ":wifi_p2p_proxy_impl",
      ":wifi_scan_proxy_impl",
      "$WIFI_ROOT_DIR/utils:wifi_utils",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
      "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
      "//third_party/bounds_checking_function:libsec_shared",
    ]

    external_deps = [
      "c_utils:utils",
      "ipc:ipc_core",
    ]

    defines = [ "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num" ]

    cflags_cc = [
      "-std=c++17",
      "-fno-rtti",
    ]

    ldflags = [
      "-fPIC",
      "-Wl,-E",
    ]

    configs = [
      ":wifi_sdk_config",
      ":wifi_sdk_header",
    ]

    part_name = "wifi"
    subsystem_name = "communication"
  }
}
