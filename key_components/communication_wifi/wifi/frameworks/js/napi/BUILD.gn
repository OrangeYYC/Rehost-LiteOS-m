# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/communication/wifi/wifi/wifi.gni")

ohos_shared_library("wifi") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    cfi_cross_dso = true
    blocklist = "../../wifi_frameworks_sdk_block.txt"
  }
  install_enable = true
  include_dirs = [
    "//third_party/node/src",
    "//native_engine",
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "$WIFI_ROOT_DIR/frameworks/native/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "$WIFI_ROOT_DIR/utils/inc",
    "$WIFI_ROOT_DIR/frameworks/js/napi/inc",
  ]

  sources = [
    "src/wifi_napi_device.cpp",
    "src/wifi_napi_entry.cpp",
    "src/wifi_napi_errcode.cpp",
    "src/wifi_napi_event.cpp",
    "src/wifi_napi_hotspot.cpp",
    "src/wifi_napi_p2p.cpp",
    "src/wifi_napi_utils.cpp",
  ]
  deps = [
    "$WIFI_ROOT_DIR/frameworks/native:wifi_sdk",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/arkui/napi:ace_napi",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "ipc:ipc_core",
  ]

  relative_install_dir = "module"
  part_name = "wifi"
  subsystem_name = "communication"
}

ohos_shared_library("wifiext") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    cfi_cross_dso = true
    blocklist = "../../wifi_frameworks_sdk_block.txt"
  }
  install_enable = true
  include_dirs = [
    "//third_party/node/src",
    "//native_engine",
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "$WIFI_ROOT_DIR/frameworks/native/include",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/frameworks/js/napi/inc",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
  ]

  sources = [
    "src/wifi_ext_napi_entry.cpp",
    "src/wifi_ext_napi_hotspot.cpp",
    "src/wifi_napi_errcode.cpp",
    "src/wifi_napi_utils.cpp",
  ]
  deps = [
    "$WIFI_ROOT_DIR/frameworks/native:wifi_sdk",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/arkui/napi:ace_napi",
  ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
  ]

  if (wifi_feature_with_ap_extension) {
    defines = [ "FEATURE_AP_EXTENSION" ]
  }

  relative_install_dir = "module"
  part_name = "wifi"
  subsystem_name = "communication"
}

ohos_shared_library("wifi_native_js") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    cfi_cross_dso = true
    blocklist = "../../wifi_frameworks_sdk_block.txt"
  }
  install_enable = true
  include_dirs = [
    "//third_party/node/src",
    "//native_engine",
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/frameworks/js/napi/inc",
    "$WIFI_ROOT_DIR/frameworks/native/include",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "$WIFI_ROOT_DIR/utils/inc",
  ]

  sources = [
    "src/wifi_napi_device.cpp",
    "src/wifi_napi_entry.cpp",
    "src/wifi_napi_errcode.cpp",
    "src/wifi_napi_event.cpp",
    "src/wifi_napi_hotspot.cpp",
    "src/wifi_napi_p2p.cpp",
    "src/wifi_napi_utils.cpp",
  ]
  deps = [
    "$WIFI_ROOT_DIR/frameworks/native:wifi_sdk",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/arkui/napi:ace_napi",
  ]

  defines = [ "ENABLE_NAPI_COMPATIBLE" ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "ipc:ipc_core",
  ]

  relative_install_dir = "module"
  part_name = "wifi"
  subsystem_name = "communication"
}

ohos_shared_library("wifimanager") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    cfi_cross_dso = true
    blocklist = "../../wifi_frameworks_sdk_block.txt"
  }
  install_enable = true
  include_dirs = [
    "//third_party/node/src",
    "//native_engine",
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "$WIFI_ROOT_DIR/frameworks/native/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "$WIFI_ROOT_DIR/utils/inc",
    "$WIFI_ROOT_DIR/frameworks/js/napi/inc",
  ]
  sources = [
    "src/wifi_napi_device.cpp",
    "src/wifi_napi_entry.cpp",
    "src/wifi_napi_errcode.cpp",
    "src/wifi_napi_event.cpp",
    "src/wifi_napi_hotspot.cpp",
    "src/wifi_napi_p2p.cpp",
    "src/wifi_napi_utils.cpp",
  ]
  deps = [
    "$WIFI_ROOT_DIR/frameworks/native:wifi_sdk",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/arkui/napi:ace_napi",
  ]
  defines = [ "ENABLE_NAPI_WIFI_MANAGER" ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "ipc:ipc_core",
  ]
  relative_install_dir = "module"
  part_name = "wifi"
  subsystem_name = "communication"
}

ohos_shared_library("wifimanagerext") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    cfi_cross_dso = true
    blocklist = "../../wifi_frameworks_sdk_block.txt"
  }
  install_enable = true
  include_dirs = [
    "//third_party/node/src",
    "//native_engine",
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "$WIFI_ROOT_DIR/frameworks/native/include",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/frameworks/js/napi/inc",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
  ]

  sources = [
    "src/wifi_ext_napi_entry.cpp",
    "src/wifi_ext_napi_hotspot.cpp",
    "src/wifi_napi_errcode.cpp",
    "src/wifi_napi_utils.cpp",
  ]
  deps = [
    "$WIFI_ROOT_DIR/frameworks/native:wifi_sdk",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/arkui/napi:ace_napi",
  ]
  defines = [ "ENABLE_NAPI_WIFI_MANAGER" ]
  if (wifi_feature_with_ap_extension) {
    defines += [ "FEATURE_AP_EXTENSION" ]
  }
  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
  ]

  relative_install_dir = "module"
  part_name = "wifi"
  subsystem_name = "communication"
}
