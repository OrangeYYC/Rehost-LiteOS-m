# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//foundation/communication/wifi/wifi/wifi_lite.gni")
} else {
  import("//build/ohos.gni")
  import("//foundation/communication/wifi/wifi/wifi.gni")
}

config("wifi_fw_common_header") {
  include_dirs = [
    "idl_interface",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/services/wifi_standard/sdk/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/ipc_framework/cRPC/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
    "$WIFI_ROOT_DIR/services/wifi_standard/ipc_framework/interface",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client",
    "$WIFI_ROOT_DIR/services/wifi_standard/include",
  ]
  if (defined(ohos_lite)) {
    include_dirs += [
      "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
      "//third_party/bounds_checking_function/include",
    ]
  } else {
    include_dirs += [
      "//commonlibrary/c_utils/base/include",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    ]
  }
}

config("wifi_idl_cxx_config") {
  visibility = [ "//:*" ]
  include_dirs = [ ":wifi_fw_common_header" ]

  cflags = [
    "-std=c++17",
    "-fno-rtti",
  ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

idl_client_sources = [
  "$WIFI_ROOT_DIR/frameworks/native/src/wifi_hid2d_msg.cpp",
  "$WIFI_ROOT_DIR/frameworks/native/src/wifi_msg.cpp",
  "idl_interface/i_wifi.c",
  "idl_interface/i_wifi_chip.c",
  "idl_interface/i_wifi_hotspot_iface.c",
  "idl_interface/i_wifi_iface.c",
  "idl_interface/i_wifi_p2p_iface.c",
  "idl_interface/i_wifi_public_func.c",
  "idl_interface/i_wifi_sta_iface.c",
  "idl_interface/i_wifi_supplicant_iface.c",
  "wifi_ap_hal_interface.cpp",
  "wifi_base_hal_interface.cpp",
  "wifi_chip_hal_interface.cpp",
  "wifi_idl_client.cpp",
  "wifi_idl_inner_interface.cpp",
  "wifi_p2p_hal_interface.cpp",
  "wifi_sta_hal_interface.cpp",
  "wifi_supplicant_hal_interface.cpp",
]

if (defined(ohos_lite)) {
  shared_library("wifi_idl_client") {
    sources = idl_client_sources

    configs += [
      ":wifi_idl_cxx_config",
      ":wifi_fw_common_header",
    ]

    deps = [
      "$WIFI_ROOT_DIR/services/wifi_standard/ipc_framework/cRPC:crpc_client",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//third_party/bounds_checking_function:libsec_shared",
    ]

    defines = [
      "OHOS_ARCH_LITE",
      "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num",
    ]
    configs -= [
      "//build/lite/config:language_cpp",
      "//build/lite/config:language_c",
    ]
    cflags_c = [
      "-std=c99",
      "-fPIC",
    ]
    cflags_cc = [
      "-std=c++17",
      "-fno-rtti",
      "-fPIC",
    ]
    ldflags = [
      "-fPIC",
      "-Wl,-E",
    ]
  }
} else {
  ohos_source_set("wifi_utils") {
    part_name = "wifi"
    sources = []

    configs = [
      ":wifi_idl_cxx_config",
      ":wifi_fw_common_header",
    ]
  }

  ohos_shared_library("wifi_idl_client") {
    sanitize = {
      cfi = true
      boundary_sanitize = true
      cfi_cross_dso = true
    }
    install_enable = true
    sources = idl_client_sources

    defines = [ "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num" ]

    configs = [ ":wifi_fw_common_header" ]

    deps = [
      ":wifi_utils",
      "$WIFI_ROOT_DIR/services/wifi_standard/ipc_framework/cRPC:crpc_client",
      "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
    ]

    external_deps = [
      "c_utils:utils",
      "hiviewdfx_hilog_native:libhilog",
    ]
    cflags_cc = [
      "-std=c++17",
      "-fno-rtti",
    ]

    ldflags = [
      "-fPIC",
      "-Wl,-E",
    ]

    part_name = "wifi"
    subsystem_name = "communication"
  }
}
