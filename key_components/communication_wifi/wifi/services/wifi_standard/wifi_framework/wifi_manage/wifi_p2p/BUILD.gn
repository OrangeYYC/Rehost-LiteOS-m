# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/communication/wifi/wifi/wifi.gni")

ohos_shared_library("wifi_p2p_service") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    cfi_cross_dso = true
  }
  install_enable = true
  sources = [
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/handler.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/internal_message.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/message_queue.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/state.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/state_machine.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/wifi_broadcast_helper.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_p2p/hid2d/wifi_hid2d_service_utils.cpp",
    "authorizing_negotiation_request_state.cpp",
    "group_formed_state.cpp",
    "group_negotiation_state.cpp",
    "invitation_received_state.cpp",
    "invitation_request_state.cpp",
    "p2p_default_state.cpp",
    "p2p_disabled_state.cpp",
    "p2p_disabling_state.cpp",
    "p2p_enabled_state.cpp",
    "p2p_enabling_state.cpp",
    "p2p_group_formation_state.cpp",
    "p2p_group_join_state.cpp",
    "p2p_group_operating_state.cpp",
    "p2p_idle_state.cpp",
    "p2p_interface.cpp",
    "p2p_inviting_state.cpp",
    "p2p_monitor.cpp",
    "p2p_state_machine.cpp",
    "provision_discovery_state.cpp",
    "wifi_p2p_device_manager.cpp",
    "wifi_p2p_dns_sd_service_info.cpp",
    "wifi_p2p_dns_sd_service_request.cpp",
    "wifi_p2p_dns_sd_service_response.cpp",
    "wifi_p2p_dns_txt_record.cpp",
    "wifi_p2p_group_info_proxy.cpp",
    "wifi_p2p_group_manager.cpp",
    "wifi_p2p_service.cpp",
    "wifi_p2p_service_manager.cpp",
    "wifi_p2p_service_request_list.cpp",
    "wifi_p2p_service_response_list.cpp",
    "wifi_p2p_temp_disc_event.cpp",
    "wifi_p2p_upnp_service_info.cpp",
    "wifi_p2p_upnp_service_request.cpp",
    "wifi_p2p_upnp_service_response.cpp",
  ]

  include_dirs = [
    "./",
    "//commonlibrary/c_utils/base/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/services/wifi_standard/ipc_framework/cRPC/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client/idl_interface",
    "$DHCP_ROOT_DIR/services/mgr_service/include",
    "$DHCP_ROOT_DIR/interfaces/inner_api/include",
    "$DHCP_ROOT_DIR/interfaces/inner_api/interfaces",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_scan",
    "$WIFI_ROOT_DIR/utils/inc",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_p2p/hid2d",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common",
    "$WIFI_ROOT_DIR/services/wifi_standard/include",
  ]

  cflags_cc = [
    "-std=c++17",
    "-Wall",
  ]

  ldflags = [
    "-fPIC",
    "-Wl,-E",
  ]

  defines = [ "AP_NOT_DIRECT_USE_DHCP" ]
  if (wifi_feature_non_seperate_p2p) {
    defines += [ "NON_SEPERATE_P2P" ]
  }

  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "netmanager_base:net_conn_manager_if",
  ]

  deps = [
    "$DHCP_ROOT_DIR/services/mgr_service:dhcp_manager_service",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage:wifi_manager_service",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client:wifi_idl_client",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
    "$WIFI_ROOT_DIR/utils:wifi_utils",
  ]

  part_name = "wifi"
  subsystem_name = "communication"
}
